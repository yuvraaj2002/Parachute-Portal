"""Fixed Audit Log table with proper structure

Revision ID: 692bfa4843fa
Revises: c3782ec9bde1
Create Date: 2025-08-21 11:29:26.984371

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '692bfa4843fa'
down_revision: Union[str, Sequence[str], None] = 'c3782ec9bde1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('audit_logs', sa.Column('category', sa.Enum('AUTHENTICATION', 'AUTHORIZATION', 'DATA_ACCESS', 'DATA_MODIFICATION', 'DATA_DELETION', 'SYSTEM_ADMIN', 'SECURITY_EVENT', 'COMPLIANCE', 'USER_MANAGEMENT', 'PATIENT_DATA', 'BILLING', 'FULFILLMENT', 'COMMUNICATION', 'FILE_OPERATIONS', 'EXPORT_IMPORT', name='audit_log_category_enum'), nullable=False))
    op.add_column('audit_logs', sa.Column('resource_type', sa.String(length=100), nullable=True))
    op.add_column('audit_logs', sa.Column('resource_id', sa.Integer(), nullable=True))
    op.add_column('audit_logs', sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risk_level_enum'), nullable=True))
    op.add_column('audit_logs', sa.Column('suspicious_indicators', sa.JSON(), nullable=True))
    op.create_index('idx_audit_logs_category', 'audit_logs', ['category'], unique=False)
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_logs_ip_address', 'audit_logs', ['ip_address'], unique=False)
    op.create_index('idx_audit_logs_resource', 'audit_logs', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_logs_risk_level', 'audit_logs', ['risk_level'], unique=False)
    op.create_index('idx_audit_logs_user_id', 'audit_logs', ['user_id'], unique=False)
    op.alter_column('billing_entries', 'status',
               existing_type=postgresql.ENUM('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billingstatus'),
               type_=sa.Enum('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billing_status_enum'),
               existing_nullable=False)
    op.alter_column('fulfillment_records', 'status',
               existing_type=postgresql.ENUM('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillmentstatus'),
               type_=sa.Enum('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillment_status_enum'),
               existing_nullable=False)
    op.alter_column('pa_requests', 'status',
               existing_type=postgresql.ENUM('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pastatus'),
               type_=sa.Enum('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pa_status_enum'),
               existing_nullable=False)
    op.alter_column('patient_forms', 'status',
               existing_type=postgresql.ENUM('PENDING', 'SENT', 'COMPLETED', 'OVERDUE', name='formstatus'),
               type_=sa.Enum('PENDING', 'SENT', 'COMPLETED', 'OVERDUE', name='form_status_enum'),
               existing_nullable=True)
    op.alter_column('patient_tickets', 'ticket_status',
               existing_type=postgresql.ENUM('READY_FOR_REVIEW', 'NEEDS_PA', 'PA_SUBMITTED', 'PA_APPROVED', 'PA_DENIED', 'READY_FOR_BILLING', 'BILLED', 'PAID', 'DENIED', 'READY_FOR_FULFILLMENT', 'FULFILLED', 'DELIVERED', 'COMPLETED', 'CANCELLED', name='ticketstatus'),
               type_=sa.Enum('READY_FOR_REVIEW', 'NEEDS_PA', 'PA_SUBMITTED', 'PA_APPROVED', 'PA_DENIED', 'READY_FOR_BILLING', 'BILLED', 'PAID', 'DENIED', 'READY_FOR_FULFILLMENT', 'FULFILLED', 'DELIVERED', 'COMPLETED', 'CANCELLED', name='ticket_status_enum'),
               existing_nullable=True)
    op.alter_column('patient_tickets', 'pa_status',
               existing_type=postgresql.ENUM('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pastatus'),
               type_=sa.Enum('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pa_status_enum'),
               existing_nullable=True)
    op.alter_column('patient_tickets', 'billing_status',
               existing_type=postgresql.ENUM('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billingstatus'),
               type_=sa.Enum('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billing_status_enum'),
               existing_nullable=True)
    op.alter_column('patient_tickets', 'fulfillment_status',
               existing_type=postgresql.ENUM('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillmentstatus'),
               type_=sa.Enum('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillment_status_enum'),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('patient_tickets', 'fulfillment_status',
               existing_type=sa.Enum('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillment_status_enum'),
               type_=postgresql.ENUM('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillmentstatus'),
               existing_nullable=True)
    op.alter_column('patient_tickets', 'billing_status',
               existing_type=sa.Enum('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billing_status_enum'),
               type_=postgresql.ENUM('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billingstatus'),
               existing_nullable=True)
    op.alter_column('patient_tickets', 'pa_status',
               existing_type=sa.Enum('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pa_status_enum'),
               type_=postgresql.ENUM('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pastatus'),
               existing_nullable=True)
    op.alter_column('patient_tickets', 'ticket_status',
               existing_type=sa.Enum('READY_FOR_REVIEW', 'NEEDS_PA', 'PA_SUBMITTED', 'PA_APPROVED', 'PA_DENIED', 'READY_FOR_BILLING', 'BILLED', 'PAID', 'DENIED', 'READY_FOR_FULFILLMENT', 'FULFILLED', 'DELIVERED', 'COMPLETED', 'CANCELLED', name='ticket_status_enum'),
               type_=postgresql.ENUM('READY_FOR_REVIEW', 'NEEDS_PA', 'PA_SUBMITTED', 'PA_APPROVED', 'PA_DENIED', 'READY_FOR_BILLING', 'BILLED', 'PAID', 'DENIED', 'READY_FOR_FULFILLMENT', 'FULFILLED', 'DELIVERED', 'COMPLETED', 'CANCELLED', name='ticketstatus'),
               existing_nullable=True)
    op.alter_column('patient_forms', 'status',
               existing_type=sa.Enum('PENDING', 'SENT', 'COMPLETED', 'OVERDUE', name='form_status_enum'),
               type_=postgresql.ENUM('PENDING', 'SENT', 'COMPLETED', 'OVERDUE', name='formstatus'),
               existing_nullable=True)
    op.alter_column('pa_requests', 'status',
               existing_type=sa.Enum('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pa_status_enum'),
               type_=postgresql.ENUM('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pastatus'),
               existing_nullable=False)
    op.alter_column('fulfillment_records', 'status',
               existing_type=sa.Enum('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillment_status_enum'),
               type_=postgresql.ENUM('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillmentstatus'),
               existing_nullable=False)
    op.alter_column('billing_entries', 'status',
               existing_type=sa.Enum('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billing_status_enum'),
               type_=postgresql.ENUM('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billingstatus'),
               existing_nullable=False)
    op.drop_index('idx_audit_logs_user_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_risk_level', table_name='audit_logs')
    op.drop_index('idx_audit_logs_resource', table_name='audit_logs')
    op.drop_index('idx_audit_logs_ip_address', table_name='audit_logs')
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.drop_index('idx_audit_logs_category', table_name='audit_logs')
    op.drop_column('audit_logs', 'suspicious_indicators')
    op.drop_column('audit_logs', 'risk_level')
    op.drop_column('audit_logs', 'resource_id')
    op.drop_column('audit_logs', 'resource_type')
    op.drop_column('audit_logs', 'category')
    # ### end Alembic commands ###
