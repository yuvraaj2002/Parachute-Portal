"""initial_database_schema

Revision ID: 0e2bb90c5203
Revises: 
Create Date: 2025-08-21 19:22:27.764790

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0e2bb90c5203'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('allowed_emails',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('is_registered', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_allowed_emails_email'), 'allowed_emails', ['email'], unique=True)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('action_details', sa.String(length=500), nullable=True),
    sa.Column('table_name', sa.String(length=100), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_category', 'audit_logs', ['category'], unique=False)
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_logs_ip_address', 'audit_logs', ['ip_address'], unique=False)
    op.create_index('idx_audit_logs_record_id', 'audit_logs', ['record_id'], unique=False)
    op.create_index('idx_audit_logs_table_name', 'audit_logs', ['table_name'], unique=False)
    op.create_index('idx_audit_logs_user_id', 'audit_logs', ['user_id'], unique=False)
    op.create_table('patient_tickets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parachute_case_id', sa.String(length=100), nullable=False),
    sa.Column('ticket_number', sa.String(length=50), nullable=False),
    sa.Column('patient_name', sa.String(length=100), nullable=False),
    sa.Column('patient_dob', sa.DateTime(), nullable=False),
    sa.Column('patient_phone', sa.String(length=20), nullable=False),
    sa.Column('patient_email', sa.String(length=255), nullable=False),
    sa.Column('product_requested', sa.String(length=100), nullable=False),
    sa.Column('hcpcs_code', sa.String(length=20), nullable=False),
    sa.Column('diagnosis_icd10', sa.String(length=20), nullable=False),
    sa.Column('prescription_file_url', sa.String(length=500), nullable=True),
    sa.Column('insurance_provider', sa.String(length=100), nullable=True),
    sa.Column('insurance_group_number', sa.String(length=50), nullable=True),
    sa.Column('insurance_member_id', sa.String(length=50), nullable=True),
    sa.Column('insurance_verified', sa.Boolean(), nullable=True),
    sa.Column('ordering_provider_name', sa.String(length=100), nullable=False),
    sa.Column('provider_npi', sa.String(length=20), nullable=True),
    sa.Column('referral_source', sa.String(length=100), nullable=True),
    sa.Column('qualified_flag', sa.Boolean(), nullable=True),
    sa.Column('ticket_status', sa.Enum('READY_FOR_REVIEW', 'NEEDS_PA', 'PA_SUBMITTED', 'PA_APPROVED', 'PA_DENIED', 'READY_FOR_BILLING', 'BILLED', 'PAID', 'DENIED', 'READY_FOR_FULFILLMENT', 'FULFILLED', 'DELIVERED', 'COMPLETED', 'CANCELLED', name='ticket_status_enum'), nullable=True),
    sa.Column('pa_required', sa.Boolean(), nullable=True),
    sa.Column('pa_status', sa.Enum('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pa_status_enum'), nullable=True),
    sa.Column('billing_status', sa.Enum('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billing_status_enum'), nullable=True),
    sa.Column('fulfillment_status', sa.Enum('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillment_status_enum'), nullable=True),
    sa.Column('assigned_staff_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_staff_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patient_tickets_parachute_case_id'), 'patient_tickets', ['parachute_case_id'], unique=True)
    op.create_index(op.f('ix_patient_tickets_ticket_number'), 'patient_tickets', ['ticket_number'], unique=True)
    op.create_table('billing_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('payer_name', sa.String(length=100), nullable=False),
    sa.Column('submission_date', sa.DateTime(), nullable=False),
    sa.Column('amount_billed', sa.Float(), nullable=False),
    sa.Column('claim_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('NOT_READY', 'READY', 'SUBMITTED', 'PAID', 'DENIED', 'RESUBMITTED', name='billing_status_enum'), nullable=False),
    sa.Column('resubmission_count', sa.Integer(), nullable=True),
    sa.Column('original_claim_id', sa.String(length=100), nullable=True),
    sa.Column('cmn_file_url', sa.String(length=500), nullable=True),
    sa.Column('pa_file_url', sa.String(length=500), nullable=True),
    sa.Column('rx_file_url', sa.String(length=500), nullable=True),
    sa.Column('eligibility_screenshot_url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fulfillment_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('order_packed_date', sa.DateTime(), nullable=True),
    sa.Column('shipped_date', sa.DateTime(), nullable=True),
    sa.Column('delivered_date', sa.DateTime(), nullable=True),
    sa.Column('shipping_method', sa.String(length=50), nullable=True),
    sa.Column('tracking_number', sa.String(length=100), nullable=True),
    sa.Column('carrier', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('NOT_READY', 'READY', 'PACKED', 'SHIPPED', 'DELIVERED', name='fulfillment_status_enum'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurance_verifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('verification_date', sa.DateTime(), nullable=False),
    sa.Column('verified_by', sa.Integer(), nullable=False),
    sa.Column('verification_method', sa.String(length=50), nullable=False),
    sa.Column('deductible_met', sa.Boolean(), nullable=True),
    sa.Column('deductible_amount', sa.Float(), nullable=True),
    sa.Column('deductible_remaining', sa.Float(), nullable=True),
    sa.Column('coverage_percentage', sa.Float(), nullable=True),
    sa.Column('allowed_amount', sa.Float(), nullable=True),
    sa.Column('estimated_patient_cost', sa.Float(), nullable=True),
    sa.Column('insurance_portion', sa.Float(), nullable=True),
    sa.Column('verification_status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pa_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('pa_number', sa.String(length=100), nullable=True),
    sa.Column('request_date', sa.DateTime(), nullable=False),
    sa.Column('submission_date', sa.DateTime(), nullable=True),
    sa.Column('response_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('NOT_REQUIRED', 'REQUIRED', 'SUBMITTED', 'APPROVED', 'DENIED', 'PENDING', name='pa_status_enum'), nullable=False),
    sa.Column('request_file_url', sa.String(length=500), nullable=True),
    sa.Column('response_file_url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient_communications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('communication_type', sa.String(length=50), nullable=False),
    sa.Column('message_content', sa.Text(), nullable=False),
    sa.Column('message_subject', sa.String(length=200), nullable=True),
    sa.Column('sent', sa.Boolean(), nullable=True),
    sa.Column('sent_date', sa.DateTime(), nullable=True),
    sa.Column('delivered', sa.Boolean(), nullable=True),
    sa.Column('delivered_date', sa.DateTime(), nullable=True),
    sa.Column('trigger_type', sa.String(length=50), nullable=True),
    sa.Column('automated', sa.Boolean(), nullable=True),
    sa.Column('recipient_phone', sa.String(length=20), nullable=True),
    sa.Column('recipient_email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient_forms',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('form_type', sa.String(length=50), nullable=False),
    sa.Column('form_name', sa.String(length=100), nullable=False),
    sa.Column('form_url', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'COMPLETED', 'OVERDUE', name='form_status_enum'), nullable=True),
    sa.Column('sent_date', sa.DateTime(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('patient_response_url', sa.String(length=500), nullable=True),
    sa.Column('signature_received', sa.Boolean(), nullable=True),
    sa.Column('auto_fill_data', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('refill_schedules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('refill_cycle_days', sa.Integer(), nullable=False),
    sa.Column('next_refill_date', sa.DateTime(), nullable=False),
    sa.Column('last_refill_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('refill_sent', sa.Boolean(), nullable=True),
    sa.Column('refill_sent_date', sa.DateTime(), nullable=True),
    sa.Column('patient_notified', sa.Boolean(), nullable=True),
    sa.Column('staff_reminder_sent', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('assigned_staff_id', sa.Integer(), nullable=False),
    sa.Column('task_title', sa.String(length=200), nullable=False),
    sa.Column('task_description', sa.Text(), nullable=True),
    sa.Column('task_type', sa.String(length=50), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_staff_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket_notes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patient_ticket_id', sa.Integer(), nullable=False),
    sa.Column('staff_member_id', sa.Integer(), nullable=False),
    sa.Column('note_content', sa.Text(), nullable=False),
    sa.Column('note_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patient_ticket_id'], ['patient_tickets.id'], ),
    sa.ForeignKeyConstraint(['staff_member_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ticket_notes')
    op.drop_table('staff_tasks')
    op.drop_table('refill_schedules')
    op.drop_table('patient_forms')
    op.drop_table('patient_communications')
    op.drop_table('pa_requests')
    op.drop_table('insurance_verifications')
    op.drop_table('fulfillment_records')
    op.drop_table('billing_entries')
    op.drop_index(op.f('ix_patient_tickets_ticket_number'), table_name='patient_tickets')
    op.drop_index(op.f('ix_patient_tickets_parachute_case_id'), table_name='patient_tickets')
    op.drop_table('patient_tickets')
    op.drop_index('idx_audit_logs_user_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_table_name', table_name='audit_logs')
    op.drop_index('idx_audit_logs_record_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_ip_address', table_name='audit_logs')
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.drop_index('idx_audit_logs_category', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_allowed_emails_email'), table_name='allowed_emails')
    op.drop_table('allowed_emails')
    op.drop_table('users')
    # ### end Alembic commands ###
