"""add_document_group_id_to_document_uploads

Revision ID: bbf2001ce0bd
Revises: 8a76edde5459
Create Date: 2025-09-25 00:34:29.927662

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bbf2001ce0bd'
down_revision: Union[str, Sequence[str], None] = '8a76edde5459'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_provider_patients_created_at'), table_name='provider_patients')
    op.drop_index(op.f('idx_provider_patients_date_ordered'), table_name='provider_patients')
    op.drop_index(op.f('idx_provider_patients_patient_name'), table_name='provider_patients')
    op.drop_index(op.f('idx_provider_patients_payment_status'), table_name='provider_patients')
    op.drop_index(op.f('idx_provider_patients_shipping_status'), table_name='provider_patients')
    op.drop_index(op.f('idx_provider_patients_tracking_number'), table_name='provider_patients')
    op.drop_table('provider_patients')
    op.add_column('document_uploads', sa.Column('document_group_id', sa.String(length=100), nullable=True))
    op.create_index('idx_document_uploads_group_id', 'document_uploads', ['document_group_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_document_uploads_group_id', table_name='document_uploads')
    op.drop_column('document_uploads', 'document_group_id')
    op.create_table('provider_patients',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_ordered', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('order_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('patient_name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('patient_dob', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('medication_ordered', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('patient_shipping_address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('referred_by', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('payment_status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('payment_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('shipping_payment', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('shipping_status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('tracking_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('date_delivered', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('invoice_receipt', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('pickup_or_delivery', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('provider_patients_pkey'))
    )
    op.create_index(op.f('idx_provider_patients_tracking_number'), 'provider_patients', ['tracking_number'], unique=False)
    op.create_index(op.f('idx_provider_patients_shipping_status'), 'provider_patients', ['shipping_status'], unique=False)
    op.create_index(op.f('idx_provider_patients_payment_status'), 'provider_patients', ['payment_status'], unique=False)
    op.create_index(op.f('idx_provider_patients_patient_name'), 'provider_patients', ['patient_name'], unique=False)
    op.create_index(op.f('idx_provider_patients_date_ordered'), 'provider_patients', ['date_ordered'], unique=False)
    op.create_index(op.f('idx_provider_patients_created_at'), 'provider_patients', ['created_at'], unique=False)
    # ### end Alembic commands ###
